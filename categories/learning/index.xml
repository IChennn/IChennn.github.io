<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Learning on Murmuring</title>
    <link>https://ichennn.github.io/categories/learning/index.xml</link>
    <description>Recent content in Learning on Murmuring</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://ichennn.github.io/categories/learning/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>跨領域的不安與小確幸——京大情報學研究科 院試合格心得（上）</title>
      <link>https://ichennn.github.io/blog/2017/03/%E8%B7%A8%E9%A0%98%E5%9F%9F%E7%9A%84%E4%B8%8D%E5%AE%89%E8%88%87%E5%B0%8F%E7%A2%BA%E5%B9%B8%E4%BA%AC%E5%A4%A7%E6%83%85%E5%A0%B1%E5%AD%B8%E7%A0%94%E7%A9%B6%E7%A7%91-%E9%99%A2%E8%A9%A6%E5%90%88%E6%A0%BC%E5%BF%83%E5%BE%97%E4%B8%8A/</link>
      <pubDate>Mon, 27 Mar 2017 01:22:15 +0800</pubDate>
      
      <guid>https://ichennn.github.io/blog/2017/03/%E8%B7%A8%E9%A0%98%E5%9F%9F%E7%9A%84%E4%B8%8D%E5%AE%89%E8%88%87%E5%B0%8F%E7%A2%BA%E5%B9%B8%E4%BA%AC%E5%A4%A7%E6%83%85%E5%A0%B1%E5%AD%B8%E7%A0%94%E7%A9%B6%E7%A7%91-%E9%99%A2%E8%A9%A6%E5%90%88%E6%A0%BC%E5%BF%83%E5%BE%97%E4%B8%8A/</guid>
      <description>

&lt;h2 id=&#34;寫在前面-跨領域&#34;&gt;寫在前面——跨領域&lt;/h2&gt;

&lt;p&gt;轉換領域聽起來是一件稀鬆平常的事，但做起來總是不輕鬆的。&lt;/p&gt;

&lt;p&gt;除了心底時常會冒出質疑自己的聲音外，也更容易感到孤立無援，畢竟走的是一條與身邊的人截然不同的路，很多事情都只能強壓下不安去面對，最多就是事後能在聊天過程中一笑帶過而已。&lt;/p&gt;

&lt;p&gt;大學唸的是某個純到不行的&lt;strong&gt;文院科系&lt;/strong&gt;，大三的時候雙主修經濟，原本的規劃是研究所就轉念經濟，好歹也算是本科系的。但是，果然人算不如天算，最後決定報考的卻是&lt;strong&gt;京都大學情報學研究科社會情報專攻&lt;/strong&gt;ＸＤ&lt;/p&gt;

&lt;p&gt;情報是什麼啊？很多不太懂日文的朋友會這麼問道。情報呢，就是中文的&lt;strong&gt;資訊&lt;/strong&gt;啊（笑&lt;/p&gt;

&lt;p&gt;因此這是一篇跨得很大、從南極跨到北極（？的心得。（&lt;del&gt;而且很多廢話&lt;/del&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;時程總覽與我的大轉彎時期&#34;&gt;時程總覽與我的大轉彎時期&lt;/h2&gt;

&lt;p&gt;大轉彎時期聽起來好像什麼歷史事件一樣ＸＤ&lt;/p&gt;

&lt;p&gt;基本上決定要轉考情報學領域是很晚的事情，認真開始唸書當然又是更晚的事情，大概跟地球的歷史當中人類出現的時間點差不多吧  囧&lt;/p&gt;

&lt;p&gt;我的留學時程大致上長這樣，其中有很多跟學校、報名不相關的東西，正確來說比較像是心歷路程：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ichennn.github.io/img/201703-kyoto-date.png&#34; alt=&#34;kyoto-date&#34; /&gt;&lt;/p&gt;

&lt;p&gt;可以發現，其實我大部分的時間都在迷惘跟耍廢啊orz&lt;/p&gt;

&lt;p&gt;我算是個習慣於及早開始規劃事情的人，因此在確定要考日本大學院之後，一路從雙主修的課程安排、研究計畫撰寫、找教授、筆試內容⋯⋯都想過一輪了，但是呢，還是老話一句，計畫趕不上變化啊～&lt;/p&gt;

&lt;p&gt;大轉彎的結果就是最後半年搞得像趕場一樣處處驚險orz&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;報考京都大學-準備階段&#34;&gt;報考京都大學——準備階段&lt;/h2&gt;

&lt;p&gt;雖然我在時程總覽當中有寫到筑波大學，但那其實算是我的備案，再者，考慮到報名費神貴的問題，最後決定還是全力準備京都大學就好。&lt;/p&gt;

&lt;h3 id=&#34;aao&#34;&gt;AAO&lt;/h3&gt;

&lt;p&gt;京都大學的AAO是個相當奇妙的系統，美其名是由學校做統一接洽窗口，可是又只有中港台的留學生才需要跑這個流程。（聽說是因為之前中國留學生有學經歷不實的問題才導致這個系統的出現）&lt;/p&gt;

&lt;p&gt;很多人會感到很困惑，到底應該先AAO？先聯絡教授？雖然網頁上寫說過了AAO再聯絡教授，可是教授又不知道我是誰這樣也能過？那如果一直沒消息難道我要傻傻的等？萬一被拒絕真的不能申請第二次嗎⋯⋯？&lt;/p&gt;

&lt;p&gt;我到現在也不知道標準答案orz 大概是因人而異吧（毫無參考價值&lt;/p&gt;

&lt;p&gt;我自己當初是照著官方流程，也就是先AAO後找教授，可能情報學研究科的老師都習慣光速回信（？，我送出申請大概&lt;strong&gt;兩小時&lt;/strong&gt;就通過了（驚嚇）但是我興高采烈地寄信給教授之後，教授又光速回信說：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;「抱歉哦，我要退休了」&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;⋯⋯蛤？經過肉身測試，教授很有可能不知道這系統到底是幹嘛的ＸＤ&lt;/p&gt;

&lt;p&gt;但反正也通過了，我就寄信找了另一位領域接近的教授，後來也順利進入這位教授的研究室惹 ヽ(●´∀`●)ﾉ&lt;/p&gt;

&lt;p&gt;不過後來有聽說，應該要先跟教授聯絡比較好，有的教授可能會因為不知道你哪位就放置play或是拒絕。現在想想，我真的運氣不錯ＸＤ&lt;/p&gt;

&lt;p&gt;另外有個真實性不明的不負責任小道消息，AAO會提供好幾種選項（拒絕的狀況）給教授，包括退休、收滿、研究方向無法指導等等，還有一個翻成白話是&lt;strong&gt;&lt;em&gt;我覺得這學生不好，叫他不要再來申請了&lt;/em&gt;&lt;/strong&gt;。所以如果不幸被一位教授拒絕，其實還是有可能再次提出申請的，除非⋯⋯（乾 好傷人&lt;/p&gt;

&lt;h3 id=&#34;聯絡教授&#34;&gt;聯絡教授&lt;/h3&gt;

&lt;p&gt;寄了信給我未來的指導教授，信裡附上了SOP跟個人簡歷，還有大學時代修過課的一位老師替我寫的推薦信（就是給AAO的那些東西而已）。沒寫研究計劃，因為⋯⋯不會寫orz&lt;/p&gt;

&lt;p&gt;跨領域的弱勢此時就顯現出來了，我真的不會寫⋯⋯連亂掰都沒有頭緒的那種不會。一方面是我對這個領域的研究、論文該是什麼模式不太熟悉，另一方面就是我僅有的淺薄知識也不足以支撐我掰出一篇研究計畫。&lt;/p&gt;

&lt;p&gt;所以我就想，與其硬著頭皮寫一篇讓人搖頭的研究計畫，不如乾脆別寫。&lt;/p&gt;

&lt;p&gt;事實證明這是對的，因為教授根本沒問這個。（不是說這個不重要哦，原因後述）&lt;/p&gt;

&lt;p&gt;skype其實很快就結束了，教授滿親切的，談話也沒有我原先想的那麼嚴肅可怕，問了一些基本（？題：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;不是相關科系的你，對這個領域了解多少？有拿過去問寫寫看嗎？&lt;/li&gt;
&lt;li&gt;來日本留學有經濟壓力嗎？&lt;/li&gt;
&lt;li&gt;除了京大還有申請別的學校嗎？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;結論其實也很簡單，就是&lt;strong&gt;考上了就收&lt;/strong&gt;，努力唸書啊～&lt;/p&gt;

&lt;p&gt;腦子稍微冷卻一點之後，有如大夢初醒。這幾天準備的擬答命中率是0，不禁開始檢討我的思維發生了什麼事，為什麼我以為老師在意的他似乎一點也不在意？&lt;/p&gt;

&lt;p&gt;只能說，我似乎還沒進入狀況，簡單來說&lt;strong&gt;&lt;u&gt;我以為應該著重在我的賣點，殊不知重點在於該如何彌補我的缺點&lt;/u&gt;&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;比起一些冠冕堂皇的溢美之詞，我覺得教授對於實際面的問題更有興趣就是了。畢竟真的入學後，很多事不能光靠嘴砲解決。當然如果背景與能力非常足夠，教授就會對你的動機跟研究主題很有興趣了（應該吧xd）&lt;/p&gt;

&lt;p&gt;於是我就連滾帶爬（？的衝出門去寄EMS了。&lt;/p&gt;

&lt;h3 id=&#34;索取過去問&#34;&gt;索取過去問&lt;/h3&gt;

&lt;p&gt;索取考古題的方法各研究科的網站都會寫，有些有電子檔有些則要寄信去拿。從台灣寄EMS的話，大約3天會到，內附回郵信封跟郵票就可以了。當初有點苦惱到底該怎麼放，提供一下我的作法:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;（由外到內）EMS信封 ← A4信封(上面用紅筆寫過去問請求之類的，依網頁規定) ← 回郵信封、郵票¥900&lt;/li&gt;
&lt;li&gt;日本郵票可在牯嶺街上的郵幣社買到，旁邊就是南海郵局，兩個願望一次滿足～&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;另外EMS是看重量計價，所以如果要索取的資料很多很重的話可能要多附一點郵票。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>在Hugo寫完文章，卻push不上github怎麼辦？</title>
      <link>https://ichennn.github.io/blog/2017/03/%E5%9C%A8hugo%E5%AF%AB%E5%AE%8C%E6%96%87%E7%AB%A0%E5%8D%BBpush%E4%B8%8D%E4%B8%8Agithub%E6%80%8E%E9%BA%BC%E8%BE%A6/</link>
      <pubDate>Tue, 21 Mar 2017 00:33:37 +0800</pubDate>
      
      <guid>https://ichennn.github.io/blog/2017/03/%E5%9C%A8hugo%E5%AF%AB%E5%AE%8C%E6%96%87%E7%AB%A0%E5%8D%BBpush%E4%B8%8D%E4%B8%8Agithub%E6%80%8E%E9%BA%BC%E8%BE%A6/</guid>
      <description>

&lt;p&gt;今天突然心血來潮想說自己來改改看hugo theme的樣式，CSS門外漢的我，就每個檔案都給它打開來研究研究，然後手賤的塗塗改改，想說反正&lt;code&gt;hugo server&lt;/code&gt; 上面看爽的就好，改壞了大不了重新&lt;code&gt;git clone&lt;/code&gt;下來就好惹～～&lt;/p&gt;

&lt;p&gt;結果，門外漢的我還是手賤，push了一些也不知道自己在改啥的東西上去後&amp;hellip;&amp;hellip;就發現放hugo souce的repo裡的submodule好像不同步&amp;hellip;&amp;hellip;？&lt;/p&gt;

&lt;p&gt;…&amp;hellip;我真的不知道我剛剛做了什麼（崩潰&lt;/p&gt;

&lt;p&gt;為什麼public裡面的靜態網頁push不上去ＱＱＱ救命哦&lt;/p&gt;

&lt;p&gt;想當然，就算喊破喉嚨應該也是沒人能救我  囧&lt;/p&gt;

&lt;p&gt;自己的手賤自己救，拜過估狗大神後還是把它弄好了（雙手合十&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;u-所以我到底對他做了什麼呢-u&#34;&gt;&lt;strong&gt;&lt;u&gt;所以我到底對他做了什麼呢&lt;/u&gt;？&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;…….我真的不知道啦（哭&lt;/p&gt;

&lt;h5 id=&#34;可能原因-font-color-red-push順序錯誤-font&#34;&gt;→可能原因： &lt;font color=&#34;red&#34;&gt;&lt;strong&gt;push順序錯誤：&lt;/strong&gt;&lt;font&gt;&lt;/h5&gt;

&lt;p&gt;&lt;font color=&#34;black&#34;&gt;因為submodule的內容不會被連帶更新，所以要先push submodule再push上一層（如果有需要的話），不然從上一層repo連結過去會是前一次push的內容。&lt;font&gt;&lt;/p&gt;

&lt;p&gt;只要連過去後發現，在顯示&lt;code&gt;branch:master&lt;/code&gt;的地方會顯示&lt;code&gt;tree:&amp;lt;上一次的commit&amp;gt;&lt;/code&gt;，應該就是不小心忘了先push submodule的目錄。&lt;/p&gt;

&lt;p&gt;此時在submodule裡面嘗試push的話，就會顯示：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Everything up-to-date
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一開始看到我真的是滿頭問號orz明明最新的內容都push不上去你還騙我說什麼up-to-date&amp;hellip;.&lt;/p&gt;

&lt;h3 id=&#34;u-解決方法-u&#34;&gt;&lt;strong&gt;&lt;u&gt;解決方法&lt;/u&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;參照&lt;a href=&#34;http://stackoverflow.com/questions/4445738/unable-to-push-commits-from-a-git-submodule&#34;&gt;這篇&lt;/a&gt; [註一]，總結來說就是：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Bash&#34;&gt;$ cd &amp;lt;submodule directory&amp;gt;
$ git checkout master
$ git merge HEAD@{1}
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因為現在其實有兩個branch。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Bash&#34;&gt;$ git branch
* (HEAD detached from &amp;lt;上一次的commit&amp;gt;)
  master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;除了&lt;code&gt;master&lt;/code&gt;以外，另一個就是我們現在所處的branch 。所以解決方法就是要把這兩個莫名其妙被我搞出來的東西merge在一起。當輸入merge指令之後，會看到：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Bash&#34;&gt;$ git merge HEAD@{1}
Updating 300cd65..08987fb
Fast-forward
 blog/.DS_Store                              | Bin 6148 -&amp;gt; 6148 bytes
 blog/{year-month-day =&amp;gt; 2017}/.DS_Store     | Bin 6148 -&amp;gt; 6148 bytes
 blog/year-month-day/day_1/index.html        |  96 ----------------
 blog/year-month-day/day_2/index.html        |  96 ----------------
 .
 .
 #下接一串要update的檔案
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;耶，然後就正常了！我以後還是乖乖寫東西更新就好了，不要再亂動裡面的檔案orz&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;git-add-的時候碰到奇怪的錯誤訊息&#34;&gt;&lt;code&gt;git add&lt;/code&gt;的時候碰到奇怪的錯誤訊息：&lt;/h3&gt;

&lt;p&gt;如果第一步要&lt;code&gt;add&lt;/code&gt;就不幸發生錯誤了&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git add .
fatal: Unable to create &#39;/Users/.../.git/index.lock&#39;: File exists.

Another git process seems to be running in this repository, e.g.
an editor opened by &#39;git commit&#39;. Please make sure all processes
are terminated then try again. If it still fails, a git process
may have crashed in this repository earlier:
remove the file manually to continue.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;就直接把&lt;code&gt;index.lock&lt;/code&gt;刪除即可。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Bash&#34;&gt;$ rm -f ./.git/index.lock
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;若無法&lt;code&gt;git add&lt;/code&gt;的是submodule的話，訊息應該是這樣的：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Bash&#34;&gt;$ git add .
Assertion failed: (item-&amp;gt;nowildcard_len &amp;lt;= item-&amp;gt;len &amp;amp;&amp;amp; item-&amp;gt;prefix &amp;lt;= item-&amp;gt;len), function prefix_pathspec, file pathspec.c, line 308.
Abort trap: 6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此時解決方法就不太一樣，要回到上一層處理：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git submodule init
$ git submodule update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因為自己真的很常手賤，又腦袋不太清楚就亂push東西&amp;hellip;&amp;hellip;這些問題從一開始很慌張地去估狗，甚至考慮把整個repo砍掉重練，到現在已經見怪不怪了～～（好像沒什麼好得意XD）&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;[註一] 在stackoverflow的連結裡的狀況是headless-branch，跟我碰到的似乎有點不太一樣，不過提供的方法一樣有效就是了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>如何用Hugo架出乾淨簡潔的部落格</title>
      <link>https://ichennn.github.io/blog/2017/03/%E5%A6%82%E4%BD%95%E7%94%A8hugo%E6%9E%B6%E5%87%BA%E4%B9%BE%E6%B7%A8%E7%B0%A1%E6%BD%94%E7%9A%84%E9%83%A8%E8%90%BD%E6%A0%BC/</link>
      <pubDate>Mon, 20 Mar 2017 20:28:57 +0800</pubDate>
      
      <guid>https://ichennn.github.io/blog/2017/03/%E5%A6%82%E4%BD%95%E7%94%A8hugo%E6%9E%B6%E5%87%BA%E4%B9%BE%E6%B7%A8%E7%B0%A1%E6%BD%94%E7%9A%84%E9%83%A8%E8%90%BD%E6%A0%BC/</guid>
      <description>

&lt;p&gt;從小時候就一直覺得寫自己的部落格是一件很潮很厲害的事，當然也經營過好幾個，從最一開始的yahoo部落格、無名小站到天空部落，前前後後也寫了好幾年，可是最後都虎頭蛇尾收場ＸＤ還是別提了&lt;/p&gt;

&lt;p&gt;但是從很早之前，我就一直對這些部落格平台有一些小小的不滿（？&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;首先，樣板很固定，用過的幾個當中，大概只有天空算比較自由，其他就&amp;hellip;&amp;hellip;xd&lt;/li&gt;
&lt;li&gt;很多時候只是想寫一些自己的碎碎念，並不想要知道有多少人看過，也不想要有人對此發表評論。&lt;/li&gt;
&lt;li&gt;有廣告有廣告有廣告啊啊啊&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;直到最近開始學著用github之後，意外發現可以利用github pages存放靜態頁面。於是又重新燃起了我寫部落格的熊熊大火啊&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;hugo是什麼&#34;&gt;Hugo是什麼？&lt;/h2&gt;

&lt;p&gt;簡單來說就是一個靜態網頁生成器，簡單快速好用。&lt;/p&gt;

&lt;p&gt;可以放在任何可host網站的空間，如github或FTP。
用Go語言寫成，據說比Jekyll穩定且快（當然也比較簡單ＸＤ&lt;/p&gt;

&lt;h2 id=&#34;這個網站怎麼生出來的&#34;&gt;這個網站怎麼生出來的？&lt;/h2&gt;

&lt;p&gt;有多簡單好用呢？用Hugo架一個部落格，大概需要以下幾個步驟，根據官網的&lt;a href=&#34;http://gohugo.io/overview/quickstart/&#34;&gt;Quick start&lt;/a&gt;這個過程大概只要2分鐘：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;下載hugo&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hugo new site &amp;lt;sitename&amp;gt;&lt;/code&gt;，然後&lt;code&gt;cd&lt;/code&gt;進&lt;code&gt;themes&lt;/code&gt;，網路上隨便找個順眼的主題，把它&lt;code&gt;git clone&lt;/code&gt;下來（ps. 如果想放github上的話，這邊請用submodule）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hugo new post/&amp;lt;title&amp;gt;.md&lt;/code&gt; ，寫點什麼東西進去&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hugo server&lt;/code&gt; 就可以在本地看到熱騰騰的網站了&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;好了，結束收工（欸&lt;/p&gt;

&lt;p&gt;不是啦，其實還是有很多細節可以設定，在&lt;code&gt;config.toml&lt;/code&gt; 當中可以客製化一些細節，也可自己寫一個css覆蓋原本的主題做微調。真的要鑽研也是研究不完，像是short code我到現在還是沒弄懂 囧&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo官網&lt;/a&gt;裡面有很多好玩的設定，留著日後慢慢看ＸＤ&lt;/p&gt;

&lt;h2 id=&#34;hosting-on-github&#34;&gt;Hosting on Github&lt;/h2&gt;

&lt;p&gt;然後呢？總不能這麼簡單漂亮的網站只有我自己看得到吧？&lt;/p&gt;

&lt;p&gt;我當初為了研究怎麼把它放上github，搞了一天一夜快要瘋掉，&lt;a href=&#34;http://gohugo.io/tutorials/github-pages-blog/&#34;&gt;官網上的教學&lt;/a&gt;一個很複雜不想看懂（欸），一個怎麼試都失敗搞得我很火大ry&lt;/p&gt;

&lt;p&gt;順帶一提github pages有分成user page跟project page兩種，托hugo的福，我之前一直不知道原來有分別，詳細差別參見&lt;a href=&#34;https://help.github.com/articles/user-organization-and-project-pages/&#34;&gt;官方&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;最後在各種英文日文網站的教學拼拼湊湊下，終於成功使用user page放上去惹～（也就是網址是github.io結尾）：&lt;/p&gt;

&lt;h5 id=&#34;step1-準備兩個repository&#34;&gt;Step1: 準備兩個repository&lt;/h5&gt;

&lt;p&gt;一個命名為&lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;，用來放產生的靜態頁面；另一個隨意，用來放Hugo site的source code。&lt;/p&gt;

&lt;h5 id=&#34;step2-利用hugo架網站囉&#34;&gt;Step2: 利用hugo架網站囉&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hugo new site &amp;lt;sitename&amp;gt;
$ cd &amp;lt;sitename&amp;gt;
$ hugo new post/&amp;lt;title&amp;gt;.md  #文章會放在content/post裡
$ git init
$ git remote add origin &amp;lt;隨意&amp;gt;.git. #對應到另一個隨意命名的repo
$ git submodule add &amp;lt;theme url&amp;gt; theme/&amp;lt;theme name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;submodule大概就是git裡的超連結，可以連到另一個獨立的repository裏，這樣原作者有什麼更新的話，就不用再手動更新了。&lt;/p&gt;

&lt;p&gt;不過直接&lt;code&gt;git clone&lt;/code&gt;下來也是可以的，只要本地有檔案還是可以產生靜態頁面。真要說有什麼不方便的話，大概就是某天想要換電腦寫文章的時候，要再額外到theme作者的頁面git clone一次而已。&lt;/p&gt;

&lt;h5 id=&#34;step3-生成網頁&#34;&gt;Step3:  生成網頁&lt;/h5&gt;

&lt;p&gt;先填寫好&lt;code&gt;config.toml&lt;/code&gt;內的設定，準備好要發表的文章，hugo`後會產生一個存放靜態頁面的資料夾，預設是叫public&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hugo
$ git submodule add &amp;lt;username&amp;gt;.github.io.git public
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;將public對應到&lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;，這樣之後就可以直接將public中的靜態頁面push上去了&lt;/p&gt;

&lt;h5 id=&#34;step4-準備放上github&#34;&gt;Step4:  準備放上GitHub&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd public #很重要！！
$ git add .
$ git commit -m &amp;quot;message&amp;quot;
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;為什麼說很重要呢？因為不&lt;code&gt;cd&lt;/code&gt;進public，裡面的東西是不會被連帶push上去的啊！！&lt;/p&gt;

&lt;p&gt;之後要新增文章，只要寫好之後執行&lt;code&gt;hugo&lt;/code&gt;，再把public資料夾裡的東西push上去就可以更新了💕&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>