<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on Murmuring</title>
    <link>https://ichennn.github.io/categories/tech/index.xml</link>
    <description>Recent content in Tech on Murmuring</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://ichennn.github.io/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>如何用Hugo架出乾淨簡潔的部落格</title>
      <link>https://ichennn.github.io/blog/2017/03/%E5%A6%82%E4%BD%95%E7%94%A8hugo%E6%9E%B6%E5%87%BA%E4%B9%BE%E6%B7%A8%E7%B0%A1%E6%BD%94%E7%9A%84%E9%83%A8%E8%90%BD%E6%A0%BC/</link>
      <pubDate>Mon, 20 Mar 2017 20:28:57 +0800</pubDate>
      
      <guid>https://ichennn.github.io/blog/2017/03/%E5%A6%82%E4%BD%95%E7%94%A8hugo%E6%9E%B6%E5%87%BA%E4%B9%BE%E6%B7%A8%E7%B0%A1%E6%BD%94%E7%9A%84%E9%83%A8%E8%90%BD%E6%A0%BC/</guid>
      <description>

&lt;p&gt;從小時候就一直覺得寫自己的部落格是一件很潮很厲害的事，當然也經營過好幾個，從最一開始的yahoo部落格、無名小站到天空部落，前前後後也寫了好幾年，可是最後都虎頭蛇尾收場ＸＤ還是別提了&lt;/p&gt;

&lt;p&gt;但是從很早之前，我就一直對這些部落格平台有一些小小的不滿（？&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;首先，樣板很固定，用過的幾個當中，大概只有天空算比較自由，其他就&amp;hellip;&amp;hellip;xd&lt;/li&gt;
&lt;li&gt;很多時候只是想寫一些自己的碎碎念，並不想要知道有多少人看過，也不想要有人對此發表評論。&lt;/li&gt;
&lt;li&gt;有廣告有廣告有廣告啊啊啊&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;直到最近開始學著用github之後，意外發現可以利用github pages存放靜態頁面。於是又重新燃起了我寫部落格的熊熊大火啊&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;hugo是什麼&#34;&gt;Hugo是什麼？&lt;/h2&gt;

&lt;p&gt;簡單來說就是一個靜態網頁生成器，簡單快速好用。&lt;/p&gt;

&lt;p&gt;可以放在任何可host網站的空間，如github或FTP。
用Go語言寫成，據說比Jekyll穩定且快（當然也比較簡單ＸＤ&lt;/p&gt;

&lt;h2 id=&#34;這個網站怎麼生出來的&#34;&gt;這個網站怎麼生出來的？&lt;/h2&gt;

&lt;p&gt;有多簡單好用呢？用Hugo架一個部落格，大概需要以下幾個步驟，根據官網的&lt;a href=&#34;http://gohugo.io/overview/quickstart/&#34;&gt;Quick start&lt;/a&gt;這個過程大概只要2分鐘：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;下載hugo&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hugo new site &amp;lt;sitename&amp;gt;&lt;/code&gt;，然後&lt;code&gt;cd&lt;/code&gt;進&lt;code&gt;themes&lt;/code&gt;，網路上隨便找個順眼的主題，把它&lt;code&gt;git clone&lt;/code&gt;下來（ps. 如果想放github上的話，這邊請用submodule）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hugo new post/&amp;lt;title&amp;gt;.md&lt;/code&gt; ，寫點什麼東西進去&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hugo server&lt;/code&gt; 就可以在本地看到熱騰騰的網站了&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;好了，結束收工（欸&lt;/p&gt;

&lt;p&gt;不是啦，其實還是有很多細節可以設定，在&lt;code&gt;config.toml&lt;/code&gt; 當中可以客製化一些細節，也可自己寫一個css覆蓋原本的主題做微調。真的要鑽研也是研究不完，像是short code我到現在還是沒弄懂 囧&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo官網&lt;/a&gt;裡面有很多好玩的設定，留著日後慢慢看ＸＤ&lt;/p&gt;

&lt;h2 id=&#34;hosting-on-github&#34;&gt;Hosting on Github&lt;/h2&gt;

&lt;p&gt;然後呢？總不能這麼簡單漂亮的網站只有我自己看得到吧？&lt;/p&gt;

&lt;p&gt;我當初為了研究怎麼把它放上github，搞了一天一夜快要瘋掉，&lt;a href=&#34;http://gohugo.io/tutorials/github-pages-blog/&#34;&gt;官網上的教學&lt;/a&gt;一個很複雜不想看懂（欸），一個怎麼試都失敗搞得我很火大ry&lt;/p&gt;

&lt;p&gt;順帶一提github pages有分成user page跟project page兩種，托hugo的福，我之前一直不知道原來有分別，詳細差別參見&lt;a href=&#34;https://help.github.com/articles/user-organization-and-project-pages/&#34;&gt;官方&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;最後在各種英文日文網站的教學拼拼湊湊下，終於成功使用user page放上去惹～（也就是網址是github.io結尾）：&lt;/p&gt;

&lt;h5 id=&#34;step1-準備兩個repository&#34;&gt;Step1: 準備兩個repository&lt;/h5&gt;

&lt;p&gt;一個命名為&lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;，用來放產生的靜態頁面；另一個隨意，用來放Hugo site的source code。&lt;/p&gt;

&lt;h5 id=&#34;step2-利用hugo架網站囉&#34;&gt;Step2: 利用hugo架網站囉&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hugo new site &amp;lt;sitename&amp;gt;
$ cd &amp;lt;sitename&amp;gt;
$ hugo new post/&amp;lt;title&amp;gt;.md  #文章會放在content/post裡
$ git init
$ git remote add origin &amp;lt;隨意&amp;gt;.git. #對應到另一個隨意命名的repo
$ git submodule add &amp;lt;theme url&amp;gt; theme/&amp;lt;theme name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;submodule大概就是git裡的超連結，可以連到另一個獨立的repository裏，這樣原作者有什麼更新的話，就不用再手動更新了。
不過直接&lt;code&gt;git clone&lt;/code&gt;下來也是可以的，只要本地有檔案還是可以產生靜態頁面。真要說有什麼不方便的話，大概就是某天想要換電腦寫文章的時候，要再額外到theme作者的頁面git clone一次而已。&lt;/p&gt;

&lt;h5 id=&#34;step3-生成網頁&#34;&gt;Step3:  生成網頁&lt;/h5&gt;

&lt;p&gt;先填寫好&lt;code&gt;config.toml&lt;/code&gt;內的設定，準備好要發表的文章，hugo`後會產生一個存放靜態頁面的資料夾，預設是叫public&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hugo
$ git submodule add &amp;lt;username&amp;gt;.github.io.git public
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;將public對應到&lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;，這樣之後就可以直接將public中的靜態頁面push上去了&lt;/p&gt;

&lt;h5 id=&#34;step4-準備放上github&#34;&gt;Step4:  準備放上GitHub&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd public #很重要！！
$ git add .
$ git commit -m &amp;quot;message&amp;quot;
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;為什麼說很重要呢？因為不&lt;code&gt;cd&lt;/code&gt;進public，裡面的東西是不會被連帶push上去的啊！！&lt;/p&gt;

&lt;p&gt;之後要新增文章，只要寫好之後執行&lt;code&gt;hugo&lt;/code&gt;，再把public資料夾裡的東西push上去就可以更新了！&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>